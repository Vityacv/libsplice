#!/bin/sh

ccomp32=i686-w64-mingw32-gcc
ccomp64=x86_64-w64-mingw32-gcc
cppcomp32=i686-w64-mingw32-g++
cppcomp64=x86_64-w64-mingw32-g++
ar32=i686-w64-mingw32-gcc-ar
ar64=x86_64-w64-mingw32-gcc-ar
subdir1=`dirname $PWD`
subdir0=`dirname $subdir1`
thisdir=${subdir1##*/}
win=$HOME/.wine/drive_c
src=$PWD

sizeopt="-Os -fomit-frame-pointer -fno-stack-protector -mno-stack-arg-probe"
cppopt="-fno-threadsafe-statics -fno-rtti"
cfshared="-std=c++17 -static -static-libgcc -static-libstdc++ -D_UNICODE -DUNICODE -municode -s -fno-ident -fno-asynchronous-unwind-tables -fdata-sections -ffunction-sections -nostdlib -fno-exceptions -fno-sized-deallocation -march=core2 -mfpmath=sse -flto $cppopt $sizeopt"

build ()
{ 
for i in "$@"
do
case $i in
    -g)
    echo "generating $arch pch.h.gch"
    $cppcomp $cfshared -x c++-header -o $obj/pch.h.gch -c $src/pch.cpp
    return
    ;;
    -w|-win)
    echo "initializing wine link for ulink"
    if [ ! -e $win/$thisdir ]; then
        ln -s $subdir0/$thisdir $win/$thisdir
    fi
    exit;
    ;;
esac
done
cd $obj
    echo "compiling $arch..."
    $cppcomp -c $cfshared -include $src/pch.h $src/splice.c $src/splicealloc.c $src/dizahex.c
    nasm -f $arch $src/tramp.asm -o $obj/tramp.o
    $artool cr libsplice.a splice.o splicealloc.o dizahex.o tramp.o
$cppcomp -o "test.exe" $cfshared -municode -mwindows -mconsole -s -flto -fno-ident -fno-asynchronous-unwind-tables -fdata-sections -ffunction-sections -mno-stack-arg-probe -fno-exceptions -Wl,-pic-executable,-high-entropy-va,-disable-runtime-pseudo-reloc,--major-os-version,6,--minor-os-version,1,--major-image-version,0,--minor-image-version,0,--major-subsystem-version,6,--minor-subsystem-version,1,-dynamicbase,-nxcompat,-e$testentry -nostdlib $subdir1/src/main.cpp $obj/libsplice.a -lmsvcrt -lkernel32 -luser32 -lmingw32
}
obj=$subdir1/obj64
cppcomp=$cppcomp64
ccomp=$ccomp64
artool=$ar64
arch=win64
testentry=entry
build $@

obj=$subdir1/obj32
cppcomp=$cppcomp32
ccomp=$ccomp32
arch=win32
artool=$ar32
testentry=_entry
build $@

